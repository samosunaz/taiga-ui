(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{"6ZAw":function(e,t,n){"use strict";n.r(t),n.d(t,"ExampleTuiInputPasswordModule",(function(){return W}));var o=n("2kYt"),r=n("nIj0"),a=n("sEIs"),i=n("SVIu"),s=n("Qq0t"),l=n("dvRg"),u=n("Piem"),p=n("EM62"),m=n("LusI"),d=n("K/iL"),c=n("OZlg"),f=n("e0eB"),T=n("iyc4"),S=n("mXT+"),w=n("2wTY"),C=n("gEyt");let x=(()=>{class e{constructor(){this.testForm=new r.FormGroup({testValue:new r.FormControl("password",r.Validators.required)})}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=p["\u0275\u0275defineComponent"]({type:e,selectors:[["tui-input-password-example-1"]],decls:7,vars:2,consts:[[1,"b-form",3,"formGroup"],["formControlName","testValue","tuiTextfieldSize","s"],["formControlName","testValue","tuiTextfieldSize","m",1,"tui-space_top-2",3,"tuiTextfieldLabelOutside"],["formControlName","testValue",1,"tui-space_top-2"]],template:function(e,t){1&e&&(p["\u0275\u0275elementStart"](0,"form",0),p["\u0275\u0275elementStart"](1,"tui-input-password",1),p["\u0275\u0275text"](2," Type a password "),p["\u0275\u0275elementEnd"](),p["\u0275\u0275elementStart"](3,"tui-input-password",2),p["\u0275\u0275text"](4," Type a password "),p["\u0275\u0275elementEnd"](),p["\u0275\u0275elementStart"](5,"tui-input-password",3),p["\u0275\u0275text"](6," Type a password "),p["\u0275\u0275elementEnd"](),p["\u0275\u0275elementEnd"]()),2&e&&(p["\u0275\u0275property"]("formGroup",t.testForm),p["\u0275\u0275advance"](3),p["\u0275\u0275property"]("tuiTextfieldLabelOutside",!0))},directives:[r["\u0275angular_packages_forms_forms_y"],r.NgControlStatusGroup,r.FormGroupDirective,S.a,r.NgControlStatus,r.FormControlName,w.b,C.b],encapsulation:2,changeDetection:0}),e})();var _=n("RlDx");let O=(()=>{class e{constructor(){this.testForm=new r.FormGroup({testValue:new r.FormControl("password",r.Validators.required)})}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=p["\u0275\u0275defineComponent"]({type:e,selectors:[["tui-input-password-example-2"]],features:[p["\u0275\u0275ProvidersFeature"]([{provide:l.TUI_INPUT_PASSWORD_OPTIONS,useValue:Object.assign(Object.assign({},l.TUI_INPUT_PASSWORD_DEFAULT_OPTIONS),{icons:{hide:"tuiIconEyeClosed",show:"tuiIconEyeOpen"}})}])],decls:3,vars:1,consts:[[1,"b-form",3,"formGroup"],["formControlName","testValue","tuiHintContent","","tuiHintDirection","right","tuiHintMode","onDark"]],template:function(e,t){1&e&&(p["\u0275\u0275elementStart"](0,"form",0),p["\u0275\u0275elementStart"](1,"tui-input-password",1),p["\u0275\u0275text"](2," Type a password "),p["\u0275\u0275elementEnd"](),p["\u0275\u0275elementEnd"]()),2&e&&p["\u0275\u0275property"]("formGroup",t.testForm)},directives:[r["\u0275angular_packages_forms_forms_y"],r.NgControlStatusGroup,r.FormGroupDirective,S.a,r.NgControlStatus,r.FormControlName,_.a],encapsulation:2,changeDetection:0}),e})();var I=n("EPR0"),g=n("yHor"),y=n("zGJC"),b=n("FSyC"),E=n("CDxv"),h=n("pQcr"),F=n("KzL3"),D=n("u8jZ");const P=["heading",$localize`:␟10d6f83eef18aa9fca4e651a15e9af7b5b9bdbfd␟5960739619447908905:sizes`],v=["heading",$localize`:␟6bfb042b76cbc28b1e01b51755da299d098e7e01␟6827337628740297789:options`];function N(e,t){if(1&e&&(p["\u0275\u0275elementStart"](0,"tui-doc-example",2),p["\u0275\u0275i18nAttributes"](1,P),p["\u0275\u0275element"](2,"tui-input-password-example-1"),p["\u0275\u0275elementEnd"](),p["\u0275\u0275elementStart"](3,"tui-doc-example",3),p["\u0275\u0275i18nAttributes"](4,v),p["\u0275\u0275element"](5,"tui-input-password-example-2"),p["\u0275\u0275elementEnd"]()),2&e){const e=p["\u0275\u0275nextContext"]();p["\u0275\u0275property"]("content",e.example1),p["\u0275\u0275advance"](3),p["\u0275\u0275property"]("content",e.example2)}}function A(e,t){if(1&e&&(p["\u0275\u0275elementStart"](0,"tui-input-password",6),p["\u0275\u0275text"](1," Type a password "),p["\u0275\u0275elementEnd"]()),2&e){const e=p["\u0275\u0275nextContext"](2);p["\u0275\u0275property"]("formControl",e.control)("focusable",e.focusable)("tuiTextfieldAutocomplete",e.autocomplete)("tuiTextfieldExampleText",e.exampleText)("tuiTextfieldMaxLength",e.maxLength)("tuiTextfieldLabelOutside",e.labelOutside)("tuiTextfieldSize",e.size)("readOnly",e.readOnly)("pseudoInvalid",e.pseudoInvalid)("pseudoFocused",e.pseudoFocused)("pseudoHovered",e.pseudoHovered)("tuiHintContent",e.hintContent)("tuiHintDirection",e.hintDirection)("tuiHintMode",e.hintMode)}}var V,G,M,U,L;function R(e,t){1&e&&(p["\u0275\u0275i18nStart"](0,V),p["\u0275\u0275element"](1,"code"),p["\u0275\u0275i18nEnd"]())}function H(e,t){if(1&e){const e=p["\u0275\u0275getCurrentView"]();p["\u0275\u0275elementStart"](0,"tui-doc-demo",4),p["\u0275\u0275template"](1,A,2,14,"ng-template"),p["\u0275\u0275elementEnd"](),p["\u0275\u0275elementStart"](2,"tui-doc-documentation"),p["\u0275\u0275template"](3,R,2,0,"ng-template",5),p["\u0275\u0275listener"]("documentationPropertyValueChange",(function(t){return p["\u0275\u0275restoreView"](e),p["\u0275\u0275nextContext"]().disabled=t})),p["\u0275\u0275elementEnd"](),p["\u0275\u0275element"](4,"inherited-documentation")}if(2&e){const e=p["\u0275\u0275nextContext"]();p["\u0275\u0275property"]("control",e.control),p["\u0275\u0275advance"](3),p["\u0275\u0275property"]("documentationPropertyValue",e.disabled)}}function z(e,t){if(1&e&&(p["\u0275\u0275elementStart"](0,"ol",7),p["\u0275\u0275elementStart"](1,"li"),p["\u0275\u0275elementStart"](2,"p"),p["\u0275\u0275i18nStart"](3,G),p["\u0275\u0275element"](4,"code"),p["\u0275\u0275i18nEnd"](),p["\u0275\u0275elementEnd"](),p["\u0275\u0275element"](5,"tui-doc-code",8),p["\u0275\u0275elementEnd"](),p["\u0275\u0275elementStart"](6,"li"),p["\u0275\u0275elementStart"](7,"p"),p["\u0275\u0275i18nStart"](8,M),p["\u0275\u0275element"](9,"code"),p["\u0275\u0275element"](10,"code"),p["\u0275\u0275i18nEnd"](),p["\u0275\u0275elementEnd"](),p["\u0275\u0275element"](11,"tui-doc-code",9),p["\u0275\u0275elementEnd"](),p["\u0275\u0275elementStart"](12,"li"),p["\u0275\u0275elementStart"](13,"p"),p["\u0275\u0275i18n"](14,U),p["\u0275\u0275elementEnd"](),p["\u0275\u0275element"](15,"tui-doc-code",10),p["\u0275\u0275elementEnd"](),p["\u0275\u0275elementStart"](16,"li"),p["\u0275\u0275elementStart"](17,"p"),p["\u0275\u0275i18nStart"](18,L),p["\u0275\u0275element"](19,"code"),p["\u0275\u0275i18nEnd"](),p["\u0275\u0275elementEnd"](),p["\u0275\u0275element"](20,"tui-doc-code",8),p["\u0275\u0275elementEnd"](),p["\u0275\u0275elementEnd"]()),2&e){const e=p["\u0275\u0275nextContext"]();p["\u0275\u0275advance"](5),p["\u0275\u0275property"]("code",e.exampleImportModule),p["\u0275\u0275advance"](6),p["\u0275\u0275property"]("code",e.exampleDeclareForm),p["\u0275\u0275advance"](4),p["\u0275\u0275property"]("code",e.exampleInsertTemplate),p["\u0275\u0275advance"](5),p["\u0275\u0275property"]("code",e.exampleDefineOptions)}}V=$localize`:␟31216ee7e86a9a777c7e1c7cad3dc3bb8dc54c35␟472633322147615044: Disabled state (use ${"\ufffd#1\ufffd"}:START_TAG_CODE:formControl.disable()${"\ufffd/#1\ufffd"}:CLOSE_TAG_CODE:) `,G=$localize`:␟40539c49b86eb7c6e4277a422936e770a0f03bfe␟682787318688701018: Import an Angular module for forms and ${"\ufffd#4\ufffd"}:START_TAG_CODE:TuiInputPasswordModule${"\ufffd/#4\ufffd"}:CLOSE_TAG_CODE: in the same module where you want to use our component: `,M=$localize`:␟24bd9acf98b087a0155b1bc8707249be28559a1e␟3960939324467592851: Declare a form (${"[\ufffd#9\ufffd|\ufffd#10\ufffd]"}:START_TAG_CODE:FormGroup${"[\ufffd/#9\ufffd|\ufffd/#10\ufffd]"}:CLOSE_TAG_CODE:) or a control (${"[\ufffd#9\ufffd|\ufffd#10\ufffd]"}:START_TAG_CODE:FormControl${"[\ufffd/#9\ufffd|\ufffd/#10\ufffd]"}:CLOSE_TAG_CODE:) in your component: `,M=p["\u0275\u0275i18nPostprocess"](M),U=$localize`:␟856efa24b2b203ad1c001649937b5c5738e38f97␟8042412267862615798:Add to the template:`,L=$localize`:␟454f9e46df40230eb3421c6599b1abad5af0d903␟8702396296038143424: Optionally use the ${"\ufffd#19\ufffd"}:START_TAG_CODE:TUI_INPUT_PASSWORD_OPTIONS${"\ufffd/#19\ufffd"}:CLOSE_TAG_CODE: injection token to override the default options for the component. `;let $=(()=>{class e extends m.a{constructor(){super(...arguments),this.exampleDeclareForm="import {FormControl, FormGroup} from '@angular/forms';\n\n...\n\n@Component({\n...\n})\nexport class MyComponent {\n    testForm = new FormGroup({\n        testValue: new FormControl('')\n    });\n}\n",this.exampleImportModule="import {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {TuiInputPasswordModule} from '@taiga-ui/kit';\n\n...\n\n@NgModule({\n    imports: [\n        ...\n        FormsModule,\n        ReactiveFormsModule,\n        TuiInputPasswordModule\n    ],\n...\n",this.exampleInsertTemplate='<form [formGroup]="testForm">\n    <tui-input-password formControlName="testValue">\n        Type a password\n    </tui-input-password>\n</form>\n',this.exampleDefineOptions="import {TUI_INPUT_PASSWORD_OPTIONS, TUI_INPUT_PASSWORD_DEFAULT_OPTIONS} from '@taiga-ui/kit';\n\n...\n\n@NgModule({\n    providers: [{\n        provide: TUI_INPUT_PASSWORD_OPTIONS,\n        useValue: {\n            ...TUI_INPUT_PASSWORD_DEFAULT_OPTIONS,\n            icons: {\n                hide: 'tuiIconEyeClosed',\n                show: 'tuiIconEyeOpen'\n            }\n        }\n    }],\n...\n",this.example1={HTML:'<form class="b-form" [formGroup]="testForm">\n    <tui-input-password formControlName="testValue" tuiTextfieldSize="s">\n        Type a password\n    </tui-input-password>\n    <tui-input-password\n        class="tui-space_top-2"\n        formControlName="testValue"\n        tuiTextfieldSize="m"\n        [tuiTextfieldLabelOutside]="true"\n    >\n        Type a password\n    </tui-input-password>\n    <tui-input-password class="tui-space_top-2" formControlName="testValue">\n        Type a password\n    </tui-input-password>\n</form>\n',TypeScript:"import {Component} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {changeDetection} from '../../../../../change-detection-strategy';\nimport {encapsulation} from '../../../../../view-encapsulation';\n\n@Component({\n    selector: 'tui-input-password-example-1',\n    templateUrl: './index.html',\n    changeDetection,\n    encapsulation,\n})\nexport class TuiInputPasswordExample1 {\n    testForm = new FormGroup({\n        testValue: new FormControl('password', Validators.required),\n    });\n}\n"},this.example2={HTML:'<form class="b-form" [formGroup]="testForm">\n    <tui-input-password\n        formControlName="testValue"\n        tuiHintContent\n        tuiHintDirection="right"\n        tuiHintMode="onDark"\n    >\n        Type a password\n    </tui-input-password>\n</form>\n',TypeScript:"import {Component} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {\n    TUI_INPUT_PASSWORD_DEFAULT_OPTIONS,\n    TUI_INPUT_PASSWORD_OPTIONS,\n} from '@taiga-ui/kit';\nimport {changeDetection} from '../../../../../change-detection-strategy';\nimport {encapsulation} from '../../../../../view-encapsulation';\n\n@Component({\n    selector: 'tui-input-password-example-2',\n    templateUrl: './index.html',\n    changeDetection,\n    encapsulation,\n    providers: [\n        {\n            provide: TUI_INPUT_PASSWORD_OPTIONS,\n            useValue: {\n                ...TUI_INPUT_PASSWORD_DEFAULT_OPTIONS,\n                icons: {\n                    hide: 'tuiIconEyeClosed',\n                    show: 'tuiIconEyeOpen',\n                },\n            },\n        },\n    ],\n})\nexport class TuiInputPasswordExample2 {\n    testForm = new FormGroup({\n        testValue: new FormControl('password', Validators.required),\n    });\n}\n"},this.maxLengthVariants=[10],this.autocompleteVariants=["off","new-password","current-password"],this.autocomplete=null,this.maxLength=null,this.control=new r.FormControl("",r.Validators.required)}}return e.\u0275fac=function(t){return k(t||e)},e.\u0275cmp=p["\u0275\u0275defineComponent"]({type:e,selectors:[["example-tui-input-password"]],features:[p["\u0275\u0275ProvidersFeature"]([{provide:d.a,useExisting:Object(p.forwardRef)(()=>e)}]),p["\u0275\u0275InheritDefinitionFeature"]],decls:4,vars:0,consts:[["header","InputPassword","package","KIT","type","components"],["pageTab",""],["id","sizes",3,"content",6,"heading"],["id","options",3,"content",6,"heading"],[3,"control"],["documentationPropertyName","","documentationPropertyType","boolean",3,"documentationPropertyValue","documentationPropertyValueChange"],[3,"formControl","focusable","tuiTextfieldAutocomplete","tuiTextfieldExampleText","tuiTextfieldMaxLength","tuiTextfieldLabelOutside","tuiTextfieldSize","readOnly","pseudoInvalid","pseudoFocused","pseudoHovered","tuiHintContent","tuiHintDirection","tuiHintMode"],[1,"b-demo-steps"],["filename","myComponent.module.ts",3,"code"],["filename","myComponent.component.ts",3,"code"],["filename","myComponent.template.html",3,"code"]],template:function(e,t){1&e&&(p["\u0275\u0275elementStart"](0,"tui-doc-page",0),p["\u0275\u0275template"](1,N,6,2,"ng-template",1),p["\u0275\u0275template"](2,H,5,2,"ng-template",1),p["\u0275\u0275template"](3,z,21,4,"ng-template",1),p["\u0275\u0275elementEnd"]())},directives:[c.a,f.a,T.a,x,O,I.a,g.a,y.a,b.a,S.a,r.NgControlStatus,r.FormControlDirective,E.b,h.b,F.b,C.b,w.b,_.a,D.a],encapsulation:2,changeDetection:0}),e})();const k=p["\u0275\u0275getInheritedFactory"]($);let W=(()=>{class e{}return e.\u0275mod=p["\u0275\u0275defineNgModule"]({type:e}),e.\u0275inj=p["\u0275\u0275defineInjector"]({factory:function(t){return new(t||e)},imports:[[o.c,r.FormsModule,r.ReactiveFormsModule,l.TuiInputPasswordModule,s.TuiLinkModule,u.a,i.h,s.TuiButtonModule,s.TuiTextfieldControllerModule,s.TuiHintControllerModule,a.f.forChild(Object(i.o)($))]]}),e})()}}]);