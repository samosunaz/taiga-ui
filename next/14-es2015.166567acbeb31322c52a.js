(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{"K/iL":function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));const i=new(n("EM62").InjectionToken)("Component extends AbstractExample class")},LusI:function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));var i=n("Qq0t"),o=n("pVuH");class r extends o.a{constructor(){super(...arguments),this.sizeVariants=["s","m","l"],this.hintContentVariants=["Some content"],this.hintDirectionVariants=["left","right","bottom-left","bottom-right","top-left","top-right"],this.hintModeVariants=["error","onDark"],this.typeVariants=["text","email","password","tel","url"],this.maxLengthVariants=[10],this.autocompleteVariants=["off","cc-name","cc-number","cc-exp-month","cc-exp-year","cc-type","given-name","additional-name","family-name","username","email","street-address","postal-code","country-name"],this.inputModeVariants=["text","numeric"],this.customContentVariants=["Bell"],this.customContentSelected=null,this.inputMode=this.inputModeVariants[0],this.autocomplete=null,this.maxLength=null,this.type=this.typeVariants[0],this.cleaner=!1,this.pseudoInvalid=null,this.success=!1,this.readOnly=!1,this.labelOutside=!1,this.size=this.sizeVariants[2],this.exampleText="",this.hintContent=null,this.hintDirection=this.hintDirectionVariants[2],this.hintMode=null,this.dropdownAlignVariants=["left","right"],this.dropdownAlign=this.dropdownAlignVariants[0],this.dropdownLimitWidthVariants=["fixed","min"],this.dropdownLimitWidth=this.dropdownLimitWidthVariants[0],this.dropdownDirectionVariants=["top","bottom"],this.dropdownDirection=null,this.dropdownMinHeight=i.DEFAULT_MIN_HEIGHT,this.dropdownMaxHeight=i.DEFAULT_MAX_HEIGHT}get customContent(){return null!==this.customContentSelected?'<svg xmlns="http://www.w3.org/2000/svg"\nwidth="24px"\nheight="24px"\nviewBox="0 0 24 24">\n<path fill="currentColor" d="M10,17v1c0,1.1,0.9,2,2,2h0c1.1,0,2-0.9,2-2l0-1h3.6L17,15.2V11c0-2.2-1.4-4-3-4h-1V5\n   c0-0.6-0.4-1-1-1s-1,0.4-1,1v2h-1c-1.3,0-3,1.9-3,4v4.2L6.4,17H10z M3.6,19L5,14.8V11c0-2.7,1.9-5.2,4-5.8V5c0-1.7,1.3-3,3-3\n   s3,1.3,3,3v0.1c2.3,0.6,4,3,4,5.9v3.8l1.4,4.2h-4.5c-0.4,1.8-2,3-3.9,3c-1.8,0-3.4-1.2-3.9-3H3.6z"/>\n</svg>':null}get disabled(){return this.control.disabled}set disabled(e){e?this.control.disable():this.control.enable()}}},QzmQ:function(e,t,n){"use strict";n.r(t),n.d(t,"ExampleTuiInputFileModule",(function(){return $e}));var i=n("2kYt"),o=n("nIj0"),r=n("sEIs"),l=n("SVIu"),a=n("Qq0t"),s=n("dvRg"),c=n("EM62"),d=n("LusI"),u=n("K/iL"),p=n("OZlg"),m=n("e0eB"),f=n("iyc4"),h=n("D57K"),y=n("l4xa"),g=n("ROBh"),b=n("8lHc"),v=n("YtkY"),F=n("jIqt"),j=n("8j5Y"),x=n("TLy2"),C=n("7ntQ"),w=n("7SLS"),S=n("vl3M");class T{constructor(e,t){this.file=e,this.reason=t}}function V({file:e,reason:t}){return{name:e.name,size:e.size,type:e.type,content:t}}let P=(()=>{class e{constructor(){this.control=new o.FormControl}get loading$(){return this.requests$.pipe(Object(v.a)(e=>e instanceof File?[e]:[]),Object(F.a)([]))}get rejected$(){return this.requests$.pipe(Object(v.a)(e=>e instanceof T?[V(e)]:[]),Object(j.a)(({length:e})=>{e&&this.control.setValue(null)}),Object(F.a)([]))}get requests$(){return this.control.valueChanges.pipe(Object(x.a)(e=>e?this.serverRequest(e).pipe(Object(F.a)(e)):Object(g.a)(null)),Object(C.a)())}serverRequest(e){const t=Math.round(5e3*Math.random()+500),n=t%2?null:new T(e,"Server responded for odd number of time");return Object(b.a)(t).pipe(Object(w.a)(n))}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=c["\u0275\u0275defineComponent"]({type:e,selectors:[["tui-input-file-example-1"]],decls:3,vars:7,consts:[["link","Choose an image","accept","image/*",1,"container",3,"formControl","loadingFiles","rejectedFiles"]],template:function(e,t){1&e&&(c["\u0275\u0275element"](0,"tui-input-file",0),c["\u0275\u0275pipe"](1,"async"),c["\u0275\u0275pipe"](2,"async")),2&e&&c["\u0275\u0275property"]("formControl",t.control)("loadingFiles",c["\u0275\u0275pipeBind1"](1,3,t.loading$))("rejectedFiles",c["\u0275\u0275pipeBind1"](2,5,t.rejected$))},directives:[S.a,o.NgControlStatus,o.FormControlDirective],pipes:[i.b],styles:["[_nghost-%COMP%]{display:block}.container[_ngcontent-%COMP%]{max-width:35rem}"],changeDetection:0}),Object(h.a)([y.tuiPure],e.prototype,"loading$",null),Object(h.a)([y.tuiPure],e.prototype,"rejected$",null),Object(h.a)([y.tuiPure],e.prototype,"requests$",null),e})();var R=n("ZTXN"),O=n("HM3f"),M=n("0Woy"),z=n("uCWR");class ${constructor(e,t,n){this.accumulator=e,this.seed=t,this.concurrent=n}call(e,t){return t.subscribe(new k(e,this.accumulator,this.seed,this.concurrent))}}class k extends z.b{constructor(e,t,n,i){super(e),this.accumulator=t,this.acc=n,this.concurrent=i,this.hasValue=!1,this.hasCompleted=!1,this.buffer=[],this.active=0,this.index=0}_next(e){if(this.active<this.concurrent){const n=this.index++,i=this.destination;let o;try{const{accumulator:t}=this;o=t(this.acc,e,n)}catch(t){return i.error(t)}this.active++,this._innerSub(o)}else this.buffer.push(e)}_innerSub(e){const t=new z.a(this),n=this.destination;n.add(t);const i=Object(z.c)(e,t);i!==t&&n.add(i)}_complete(){this.hasCompleted=!0,0===this.active&&0===this.buffer.length&&(!1===this.hasValue&&this.destination.next(this.acc),this.destination.complete()),this.unsubscribe()}notifyNext(e){const{destination:t}=this;this.acc=e,this.hasValue=!0,t.next(e)}notifyComplete(){const e=this.buffer;this.active--,e.length>0?this._next(e.shift()):0===this.active&&this.hasCompleted&&(!1===this.hasValue&&this.destination.next(this.acc),this.destination.complete())}}var L,E=n("kuMc"),A=n("xVbo"),D=n("SrNW");L=$localize`:␟080cae4d65efb97854af5d37318839e779a3f3d7␟3022298069038886630: With a custom accept format and async loading `;class I{constructor(e,t){this.file=e,this.reason=t}}function N(e){return e instanceof File}function _(e){return e instanceof I}function W({file:e,reason:t}){return{name:e.name,size:e.size,type:e.type,content:t}}let q=(()=>{class e{constructor(){this.files=new o.FormControl([]),this.rejectedFiles$=new R.a,this.files$=this.files.valueChanges.pipe(Object(F.a)([]),Object(M.a)(),Object(v.a)(([e,t])=>t.filter(t=>!e.includes(t))),function(e,t,n=Number.POSITIVE_INFINITY){return i=>i.lift(new $(e,t,n))}((e,t)=>Object(O.a)(t.map(e=>this.serverRequest(e).pipe(Object(F.a)(e),Object(E.a)(this.files.valueChanges.pipe(Object(A.a)(t=>!t.includes(e))))))).pipe(Object(v.a)(t=>[...e,...t.filter(y.isPresent)])),[]),Object(C.a)()),this.loading$=this.files$.pipe(Object(v.a)(e=>e.filter(N)),Object(x.a)(e=>this.files.valueChanges.pipe(Object(F.a)(this.files.value),Object(v.a)(t=>e.filter(e=>t.includes(e))))),Object(F.a)([])),this.rejected$=this.rejectedFiles$.pipe(Object(x.a)(e=>this.files$.pipe(Object(v.a)(e=>e.filter(_)),Object(D.a)((e,t)=>[...e,...t.filter(({file:e})=>this.files.value.includes(e))],[]),Object(j.a)(e=>this.removeRejected(e)),Object(v.a)(e=>e.map(W)),Object(v.a)(t=>[...e,...t]))),Object(F.a)([])),this.form=new o.FormGroup({files:this.files})}onRejectedFilesChange(e){this.rejectedFiles$.next(e)}removeRejected(e){const t=this.files.value.filter(t=>e.every(e=>e.file!==t));t.length!==this.files.value.length&&this.files.setValue(t)}serverRequest(e){const t=Math.round(5e3*Math.random()+500),n=t%2?null:new I(e,"Server responded for odd number of time");return Object(b.a)(t).pipe(Object(w.a)(n))}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=c["\u0275\u0275defineComponent"]({type:e,selectors:[["tui-input-file-example-2"]],decls:6,vars:8,consts:[[1,"container",3,"formGroup"],[1,"tui-space_bottom-1"],["link","Choose images","accept","image/*","formControlName","files",3,"multiple","loadingFiles","rejectedFiles","rejectedFilesChange"]],template:function(e,t){1&e&&(c["\u0275\u0275elementStart"](0,"form",0),c["\u0275\u0275elementStart"](1,"div",1),c["\u0275\u0275i18n"](2,L),c["\u0275\u0275elementEnd"](),c["\u0275\u0275elementStart"](3,"tui-input-file",2),c["\u0275\u0275listener"]("rejectedFilesChange",(function(e){return t.onRejectedFilesChange(e)})),c["\u0275\u0275pipe"](4,"async"),c["\u0275\u0275pipe"](5,"async"),c["\u0275\u0275elementEnd"](),c["\u0275\u0275elementEnd"]()),2&e&&(c["\u0275\u0275property"]("formGroup",t.form),c["\u0275\u0275advance"](3),c["\u0275\u0275property"]("multiple",!0)("loadingFiles",c["\u0275\u0275pipeBind1"](4,4,t.loading$))("rejectedFiles",c["\u0275\u0275pipeBind1"](5,6,t.rejected$)))},directives:[o["\u0275angular_packages_forms_forms_y"],o.NgControlStatusGroup,o.FormGroupDirective,S.a,o.NgControlStatus,o.FormControlName],pipes:[i.b],styles:["[_nghost-%COMP%]{display:block}.container[_ngcontent-%COMP%]{max-width:35rem}"],changeDetection:0}),e})();var H,G;H=$localize`:␟41b1908bd7cbd747514be2f4a82ba0bb47ac8097␟4164292255139278901: With preset files and actions when deleting `,G=$localize`:␟7fac004bcdf2783953a2e2ac31535a931817541b␟7175759508499094895:Loading files should also be in control`;class U{constructor(e,t){this.file=e,this.reason=t}}function B(e){return e instanceof U}function Q({file:e,reason:t}){return{name:e.name,size:e.size,type:e.type,content:t}}let Y=(()=>{class e{constructor(e,t,n){this.notificationsService=n,this.files=[{name:"Loading file.txt"},{name:"A file with a very very long title to check that it can be cut correctly.txt",src:"https://tools.ietf.org/html/rfc675"}],this.loadingFiles=[this.files[0]],this.rejectedFiles=[{name:"File with an error.txt",content:"Something went wrong this time"}],this.files$=new R.a,this.files$.pipe(Object(E.a)(e),Object(x.a)(e=>Object(O.a)(e.map(e=>this.serverRequest(e).pipe(Object(F.a)(e))))),Object(y.watch)(t)).subscribe(e=>{this.processResponse(e)})}onModelChange(e){if(this.processNotification(e),t=this.files,e.every(e=>-1!==t.indexOf(e)))return this.files=e,void(this.loadingFiles=this.loadingFiles.filter(t=>-1!==e.indexOf(t)));var t;this.files=e,this.loadingFiles=this.files,this.files$.next(this.files)}processNotification(e){const t=function(e,t){const n=e.filter(e=>-1===t.indexOf(e));return 1===n.length?n[0]:null}(this.files,e);t&&this.notificationsService.show(`"${t.name}" was removed`).subscribe()}processResponse(e){this.loadingFiles=this.loadingFiles.filter(t=>-1!==e.indexOf(t));const t=e.filter(B).filter(({file:e})=>-1!==this.files.indexOf(e));0!==t.length&&(this.rejectedFiles=[...this.rejectedFiles,...t.map(Q)],this.files=this.files.filter(e=>t.every(t=>t.file!==e)))}serverRequest(e){const t=Math.round(5e3*Math.random()+500),n=t%2?null:new U(e,"Server responded for odd number of time");return Object(b.a)(t).pipe(Object(w.a)(n))}}return e.\u0275fac=function(t){return new(t||e)(c["\u0275\u0275directiveInject"](y.TuiDestroyService),c["\u0275\u0275directiveInject"](c.ChangeDetectorRef),c["\u0275\u0275directiveInject"](a.TuiNotificationsService))},e.\u0275cmp=c["\u0275\u0275defineComponent"]({type:e,selectors:[["tui-input-file-example-3"]],features:[c["\u0275\u0275ProvidersFeature"]([y.TuiDestroyService])],decls:6,vars:4,consts:[[1,"container"],[1,"tui-space_bottom-1"],[3,"ngModel","multiple","loadingFiles","rejectedFiles","rejectedFilesChange","ngModelChange"]],template:function(e,t){1&e&&(c["\u0275\u0275elementStart"](0,"div",0),c["\u0275\u0275elementStart"](1,"p",1),c["\u0275\u0275i18n"](2,H),c["\u0275\u0275elementEnd"](),c["\u0275\u0275elementStart"](3,"tui-input-file",2),c["\u0275\u0275listener"]("rejectedFilesChange",(function(e){return t.rejectedFiles=e}))("ngModelChange",(function(e){return t.onModelChange(e)})),c["\u0275\u0275elementEnd"](),c["\u0275\u0275elementStart"](4,"p"),c["\u0275\u0275i18n"](5,G),c["\u0275\u0275elementEnd"](),c["\u0275\u0275elementEnd"]()),2&e&&(c["\u0275\u0275advance"](3),c["\u0275\u0275property"]("ngModel",t.files)("multiple",!0)("loadingFiles",t.loadingFiles)("rejectedFiles",t.rejectedFiles))},directives:[S.a,o.NgControlStatus,o.NgModel],styles:["[_nghost-%COMP%]{display:block}.container[_ngcontent-%COMP%]{max-width:35rem}"],changeDetection:0}),e})();var K;K=$localize`:␟4cc8b777813d22feb628efb36f28694be26e0ff8␟9158298050641782647: Sync working with files, no loading state `;let J=(()=>{class e{constructor(){this.files=[]}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=c["\u0275\u0275defineComponent"]({type:e,selectors:[["tui-input-file-example-4"]],decls:4,vars:2,consts:[[1,"container"],[1,"tui-space_bottom-1"],["size","l",3,"multiple","ngModel","ngModelChange"]],template:function(e,t){1&e&&(c["\u0275\u0275elementStart"](0,"div",0),c["\u0275\u0275elementStart"](1,"div",1),c["\u0275\u0275i18n"](2,K),c["\u0275\u0275elementEnd"](),c["\u0275\u0275elementStart"](3,"tui-input-file",2),c["\u0275\u0275listener"]("ngModelChange",(function(e){return t.files=e})),c["\u0275\u0275elementEnd"](),c["\u0275\u0275elementEnd"]()),2&e&&(c["\u0275\u0275advance"](3),c["\u0275\u0275property"]("multiple",!0)("ngModel",t.files))},directives:[S.a,o.NgControlStatus,o.NgModel],styles:["[_nghost-%COMP%]{display:block}.container[_ngcontent-%COMP%]{max-width:35rem}"],changeDetection:0}),e})();var Z,X=n("EPR0"),ee=n("yHor"),te=n("zGJC"),ne=n("u8jZ");Z=$localize`:␟1fe03ef0708f455aae105f9142c5504dcb8a8231␟8047790837368953047: An input for upload one or several files. It uses native input file abilities. `;const ie=["heading",$localize`:␟dd673a1043a8ad44d76752e86198b9fdad6cea76␟174397684173185104:Single file`],oe=["heading",$localize`:␟a1f1f7a5a2007f7010e8d818936731a335306646␟1720677440255684728:Several files`],re=["heading",$localize`:␟5091f6acf0fbf0b72c4958189d20c85b8d7f42f0␟9065652012369821232:Big size`];function le(e,t){if(1&e&&(c["\u0275\u0275elementStart"](0,"p"),c["\u0275\u0275i18n"](1,Z),c["\u0275\u0275elementEnd"](),c["\u0275\u0275elementStart"](2,"tui-doc-example",2),c["\u0275\u0275i18nAttributes"](3,ie),c["\u0275\u0275element"](4,"tui-input-file-example-1"),c["\u0275\u0275elementEnd"](),c["\u0275\u0275elementStart"](5,"tui-doc-example",3),c["\u0275\u0275i18nAttributes"](6,oe),c["\u0275\u0275element"](7,"tui-input-file-example-2"),c["\u0275\u0275elementEnd"](),c["\u0275\u0275elementStart"](8,"tui-doc-example",4),c["\u0275\u0275element"](9,"tui-input-file-example-3"),c["\u0275\u0275elementEnd"](),c["\u0275\u0275elementStart"](10,"tui-doc-example",5),c["\u0275\u0275i18nAttributes"](11,re),c["\u0275\u0275element"](12,"tui-input-file-example-4"),c["\u0275\u0275elementEnd"]()),2&e){const e=c["\u0275\u0275nextContext"]();c["\u0275\u0275advance"](2),c["\u0275\u0275property"]("content",e.example1),c["\u0275\u0275advance"](3),c["\u0275\u0275property"]("content",e.example2),c["\u0275\u0275advance"](3),c["\u0275\u0275property"]("content",e.example3),c["\u0275\u0275advance"](2),c["\u0275\u0275property"]("content",e.example4)}}var ae,se,ce,de,ue,pe,me,fe,he,ye,ge,be;function ve(e,t){1&e&&(c["\u0275\u0275i18nStart"](0,ae),c["\u0275\u0275element"](1,"code"),c["\u0275\u0275i18nEnd"]())}function Fe(e,t){1&e&&(c["\u0275\u0275i18nStart"](0,se),c["\u0275\u0275element"](1,"code"),c["\u0275\u0275i18nEnd"]())}function je(e,t){1&e&&c["\u0275\u0275i18n"](0,ce)}function xe(e,t){1&e&&c["\u0275\u0275i18n"](0,de)}function Ce(e,t){1&e&&c["\u0275\u0275i18n"](0,ue)}function we(e,t){1&e&&c["\u0275\u0275i18n"](0,pe)}function Se(e,t){1&e&&c["\u0275\u0275i18n"](0,me)}function Te(e,t){1&e&&c["\u0275\u0275i18n"](0,fe)}function Ve(e,t){1&e&&c["\u0275\u0275i18n"](0,he)}function Pe(e,t){1&e&&c["\u0275\u0275i18n"](0,ye)}function Re(e,t){if(1&e){const e=c["\u0275\u0275getCurrentView"]();c["\u0275\u0275elementStart"](0,"tui-doc-demo"),c["\u0275\u0275element"](1,"tui-input-file",6),c["\u0275\u0275elementEnd"](),c["\u0275\u0275elementStart"](2,"tui-doc-documentation"),c["\u0275\u0275template"](3,ve,2,0,"ng-template",7),c["\u0275\u0275listener"]("documentationPropertyValueChange",(function(t){return c["\u0275\u0275restoreView"](e),c["\u0275\u0275nextContext"]().disabled=t})),c["\u0275\u0275template"](4,Fe,2,0,"ng-template",8),c["\u0275\u0275listener"]("documentationPropertyValueChange",(function(t){return c["\u0275\u0275restoreView"](e),c["\u0275\u0275nextContext"]().accept=t})),c["\u0275\u0275template"](5,je,1,0,"ng-template",9),c["\u0275\u0275listener"]("documentationPropertyValueChange",(function(t){return c["\u0275\u0275restoreView"](e),c["\u0275\u0275nextContext"]().label=t})),c["\u0275\u0275template"](6,xe,1,0,"ng-template",10),c["\u0275\u0275listener"]("documentationPropertyValueChange",(function(t){return c["\u0275\u0275restoreView"](e),c["\u0275\u0275nextContext"]().link=t})),c["\u0275\u0275template"](7,Ce,1,0,"ng-template",11),c["\u0275\u0275template"](8,we,1,0,"ng-template",12),c["\u0275\u0275listener"]("documentationPropertyValueChange",(function(t){return c["\u0275\u0275restoreView"](e),c["\u0275\u0275nextContext"]().maxFileSize=t})),c["\u0275\u0275template"](9,Se,1,0,"ng-template",13),c["\u0275\u0275listener"]("documentationPropertyValueChange",(function(t){return c["\u0275\u0275restoreView"](e),c["\u0275\u0275nextContext"]().multiple=t})),c["\u0275\u0275template"](10,Te,1,0,"ng-template",14),c["\u0275\u0275listener"]("documentationPropertyValueChange",(function(t){return c["\u0275\u0275restoreView"](e),c["\u0275\u0275nextContext"]().rejectedFiles=t})),c["\u0275\u0275template"](11,Ve,1,0,"ng-template",15),c["\u0275\u0275listener"]("documentationPropertyValueChange",(function(t){return c["\u0275\u0275restoreView"](e),c["\u0275\u0275nextContext"]().showSize=t})),c["\u0275\u0275template"](12,Pe,1,0,"ng-template",16),c["\u0275\u0275listener"]("documentationPropertyValueChange",(function(t){return c["\u0275\u0275restoreView"](e),c["\u0275\u0275nextContext"]().size=t})),c["\u0275\u0275elementEnd"]()}if(2&e){const e=c["\u0275\u0275nextContext"]();c["\u0275\u0275advance"](1),c["\u0275\u0275property"]("formControl",e.control)("accept",e.accept)("link",e.link)("label",e.label)("maxFileSize",e.maxFileSize)("multiple",e.multiple)("rejectedFiles",e.rejectedFiles)("readOnly",e.readOnly)("size",e.size)("showSize",e.showSize)("focusable",e.focusable)("pseudoFocused",e.pseudoFocused)("pseudoHovered",e.pseudoHovered)("pseudoPressed",e.pseudoPressed),c["\u0275\u0275advance"](2),c["\u0275\u0275property"]("documentationPropertyValue",e.disabled),c["\u0275\u0275advance"](1),c["\u0275\u0275property"]("documentationPropertyValues",e.acceptVariants)("documentationPropertyValue",e.accept),c["\u0275\u0275advance"](1),c["\u0275\u0275property"]("documentationPropertyValue",e.label),c["\u0275\u0275advance"](1),c["\u0275\u0275property"]("documentationPropertyValue",e.link),c["\u0275\u0275advance"](2),c["\u0275\u0275property"]("documentationPropertyValues",e.maxFileSizeVariants)("documentationPropertyValue",e.maxFileSize),c["\u0275\u0275advance"](1),c["\u0275\u0275property"]("documentationPropertyValue",e.multiple),c["\u0275\u0275advance"](1),c["\u0275\u0275property"]("documentationPropertyValues",e.rejectedFilesVariants)("documentationPropertyValue",e.rejectedFiles),c["\u0275\u0275advance"](1),c["\u0275\u0275property"]("documentationPropertyValue",e.showSize),c["\u0275\u0275advance"](1),c["\u0275\u0275property"]("documentationPropertyValues",e.sizeVariants)("documentationPropertyValue",e.size)}}function Oe(e,t){if(1&e&&(c["\u0275\u0275elementStart"](0,"ol",17),c["\u0275\u0275elementStart"](1,"li"),c["\u0275\u0275elementStart"](2,"p"),c["\u0275\u0275i18nStart"](3,ge),c["\u0275\u0275element"](4,"code"),c["\u0275\u0275i18nEnd"](),c["\u0275\u0275elementEnd"](),c["\u0275\u0275element"](5,"tui-doc-code",18),c["\u0275\u0275elementEnd"](),c["\u0275\u0275elementStart"](6,"li"),c["\u0275\u0275elementStart"](7,"p"),c["\u0275\u0275i18n"](8,be),c["\u0275\u0275elementEnd"](),c["\u0275\u0275element"](9,"tui-doc-code",19),c["\u0275\u0275elementEnd"](),c["\u0275\u0275elementEnd"]()),2&e){const e=c["\u0275\u0275nextContext"]();c["\u0275\u0275advance"](5),c["\u0275\u0275property"]("code",e.exampleImportModule),c["\u0275\u0275advance"](4),c["\u0275\u0275property"]("code",e.exampleInsertTemplate)}}ae=$localize`:␟31216ee7e86a9a777c7e1c7cad3dc3bb8dc54c35␟472633322147615044: Disabled state (use ${"\ufffd#1\ufffd"}:START_TAG_CODE:formControl.disable()${"\ufffd/#1\ufffd"}:CLOSE_TAG_CODE:) `,se=$localize`:␟30876d02a3228a007a5257de99d5f7dca674def6␟8512367260740026452: Allowed formats (for native attribute ${"\ufffd#1\ufffd"}:START_TAG_CODE:accept${"\ufffd/#1\ufffd"}:CLOSE_TAG_CODE:) `,ce=$localize`:␟9e1d8ae17f259dd2ea09707bfd739def52e9427a␟5985585011983944521: Label text `,de=$localize`:␟89a84d49564b88163283c735832c296f6f57f3d1␟3977709208772062372: Link text `,ue=$localize`:␟18d7d778a69e8f70693c92ff0b47f32edc95b12a␟8330372945270919575: Files in loading process `,pe=$localize`:␟6119d719ec0330a98d880e682e2abc1195c59eea␟3924563314608826807: Max file size in bytes (30 MB by default — 30 * 1000 * 1000) `,me=$localize`:␟205964e90f903cb9b99c3d11867ed580d2b738eb␟8625084047952787649: Allows to upload several files `,fe=$localize`:␟8b220800993a93dd9ca716a6014eeec88dfd88e0␟2574853013457747211: Array of files that not passed check `,he=$localize`:␟c2230ad4bcda14af455b6f5bb951b4dae4fc4f10␟2011612506485911109: Show file size `,ye=$localize`:␟af27d8636b6c20ccdd0a11ff4d940e05eb2b8ae6␟7972270867315160918: Files list size `,ge=$localize`:␟3162c997f5b30c650eb50405c5e1c25e96008d9e␟7422636276348041502: Import ${"\ufffd#4\ufffd"}:START_TAG_CODE:TuiInputFileModule${"\ufffd/#4\ufffd"}:CLOSE_TAG_CODE: into a module where you want to use our component `,be=$localize`:␟856efa24b2b203ad1c001649937b5c5738e38f97␟8042412267862615798:Add to the template:`;let Me=(()=>{class e extends d.a{constructor(){super(...arguments),this.exampleImportModule="import {TuiInputFileModule} from '@taiga-ui/kit';\n\n...\n\n@NgModule({\n    imports: [\n        ...\n        TuiInputFileModule,\n    ],\n...\n",this.exampleInsertTemplate='<tui-input-file [formControl]="control"></tui-input-file>\n',this.example1={TypeScript:"import {Component} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {tuiPure} from '@taiga-ui/cdk';\nimport {TuiFileLike} from '@taiga-ui/kit';\nimport {Observable, of, timer} from 'rxjs';\nimport {map, mapTo, share, startWith, switchMap, tap} from 'rxjs/operators';\nimport {changeDetection} from '../../../../../change-detection-strategy';\nimport {encapsulation} from '../../../../../view-encapsulation';\n\nclass RejectedFile {\n    constructor(readonly file: TuiFileLike, readonly reason: string) {}\n}\n\nfunction convertRejected({file, reason}: RejectedFile): TuiFileLike {\n    return {\n        name: file.name,\n        size: file.size,\n        type: file.type,\n        content: reason,\n    };\n}\n\n@Component({\n    selector: 'tui-input-file-example-1',\n    templateUrl: './index.html',\n    styleUrls: ['./index.less'],\n    changeDetection,\n    encapsulation,\n})\nexport class TuiInputFileExample1 {\n    readonly control = new FormControl();\n\n    @tuiPure\n    get loading$(): Observable<ReadonlyArray<File>> {\n        return this.requests$.pipe(\n            map(file => (file instanceof File ? [file] : [])),\n            startWith([]),\n        );\n    }\n\n    @tuiPure\n    get rejected$(): Observable<ReadonlyArray<TuiFileLike>> {\n        return this.requests$.pipe(\n            map(file => (file instanceof RejectedFile ? [convertRejected(file)] : [])),\n            tap(({length}) => {\n                if (length) {\n                    this.control.setValue(null);\n                }\n            }),\n            startWith([]),\n        );\n    }\n\n    @tuiPure\n    private get requests$(): Observable<RejectedFile | File | null> {\n        return this.control.valueChanges.pipe(\n            switchMap(file =>\n                file ? this.serverRequest(file).pipe(startWith(file)) : of(null),\n            ),\n            share(),\n        );\n    }\n\n    private serverRequest(file: File): Observable<RejectedFile | File | null> {\n        const delay = Math.round(Math.random() * 5000 + 500);\n        const result =\n            delay % 2\n                ? null\n                : new RejectedFile(file, 'Server responded for odd number of time');\n\n        return timer(delay).pipe(mapTo(result));\n    }\n}\n",HTML:'<tui-input-file\n    class="container"\n    link="Choose an image"\n    accept="image/*"\n    [formControl]="control"\n    [loadingFiles]="loading$ | async"\n    [rejectedFiles]="rejected$ | async"\n></tui-input-file>\n'},this.example2={TypeScript:"import {Component} from '@angular/core';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {isPresent} from '@taiga-ui/cdk';\nimport {TuiFileLike} from '@taiga-ui/kit';\nimport {combineLatest, Observable, Subject, timer} from 'rxjs';\nimport {\n    filter,\n    map,\n    mapTo,\n    mergeScan,\n    pairwise,\n    scan,\n    share,\n    startWith,\n    switchMap,\n    takeUntil,\n    tap,\n} from 'rxjs/operators';\nimport {changeDetection} from '../../../../../change-detection-strategy';\nimport {encapsulation} from '../../../../../view-encapsulation';\n\nclass RejectedFile {\n    constructor(readonly file: TuiFileLike, readonly reason: string) {}\n}\n\nfunction isFile(file: unknown): file is File {\n    return file instanceof File;\n}\n\nfunction isRejectedFile(file: unknown): file is RejectedFile {\n    return file instanceof RejectedFile;\n}\n\nfunction convertRejected({file, reason}: RejectedFile): TuiFileLike {\n    return {\n        name: file.name,\n        size: file.size,\n        type: file.type,\n        content: reason,\n    };\n}\n\n@Component({\n    selector: 'tui-input-file-example-2',\n    templateUrl: './index.html',\n    styleUrls: ['./index.less'],\n    changeDetection,\n    encapsulation,\n})\nexport class TuiInputFileExample2 {\n    private readonly files = new FormControl([]);\n\n    private readonly rejectedFiles$ = new Subject<ReadonlyArray<TuiFileLike>>();\n\n    private readonly files$ = this.files.valueChanges.pipe(\n        // We start with empty array for pairwise to work immediately\n        startWith<readonly File[]>([]),\n        pairwise(),\n        // We map each emit to newly added files\n        map(([prev, cur]) => cur.filter(item => !prev.includes(item))),\n        // We use mergeScan + combineLatest to accumulate results in one array\n        mergeScan(\n            (acc: readonly (RejectedFile | File)[], cur) =>\n                combineLatest(\n                    cur.map(file =>\n                        this.serverRequest(file).pipe(\n                            startWith(file),\n                            takeUntil(\n                                // Cancel upload if file is removed from control\n                                this.files.valueChanges.pipe(\n                                    filter(files => !files.includes(file)),\n                                ),\n                            ),\n                        ),\n                    ),\n                    // Filtering out `null` as successfully uploaded files\n                ).pipe(map(files => [...acc, ...files.filter(isPresent)])),\n            [],\n        ),\n        // Now we have a shared Observable of currently loading Files and server-rejects\n        share(),\n    );\n\n    readonly loading$ = this.files$.pipe(\n        // We filter out RejectedFiles to remove errors from loading array\n        map(files => files.filter(isFile)),\n        switchMap(loading =>\n            this.files.valueChanges.pipe(\n                startWith(this.files.value),\n                // We filter out loading items that were removed from control before server responded\n                map(value => loading.filter(file => value.includes(file))),\n            ),\n        ),\n        startWith([]),\n    );\n\n    // We start with internal changes (i.e. wrong format or size found or user removed existing error message)\n    readonly rejected$ = this.rejectedFiles$.pipe(\n        switchMap(rejectedFiles =>\n            this.files$.pipe(\n                // We filter out Files to ignore loading files\n                map(files => files.filter(isRejectedFile)),\n                // We collect all newly rejected files and previously rejected since we switch mapped\n                scan<RejectedFile[]>(\n                    (previous, current) => [\n                        ...previous,\n                        ...current.filter(({file}) => this.files.value.includes(file)),\n                    ],\n                    [],\n                ),\n                // We remove server errored files from control **SIDE EFFECT**\n                tap(files => this.removeRejected(files)),\n                // Map new RejectedFiles to TuiFileLike with rejection reason\n                map(files => files.map(convertRejected)),\n                // Combine with currently present rejected files\n                map(filtered => [...rejectedFiles, ...filtered]),\n            ),\n        ),\n        startWith([]),\n    );\n\n    readonly form = new FormGroup({\n        files: this.files,\n    });\n\n    onRejectedFilesChange(rejectedFiles: ReadonlyArray<TuiFileLike>) {\n        this.rejectedFiles$.next(rejectedFiles);\n    }\n\n    private removeRejected(rejectedFiles: ReadonlyArray<RejectedFile>) {\n        const filtered = this.files.value.filter((file: File) =>\n            rejectedFiles.every(rejectedFile => rejectedFile.file !== file),\n        );\n\n        if (filtered.length !== this.files.value.length) {\n            this.files.setValue(filtered);\n        }\n    }\n\n    private serverRequest(file: File): Observable<RejectedFile | File | null> {\n        const delay = Math.round(Math.random() * 5000 + 500);\n        const result =\n            delay % 2\n                ? null\n                : new RejectedFile(file, 'Server responded for odd number of time');\n\n        return timer(delay).pipe(mapTo(result));\n    }\n}\n",HTML:'<form class="container" [formGroup]="form">\n    <div i18n class="tui-space_bottom-1">\n        With a custom accept format and async loading\n    </div>\n    <tui-input-file\n        link="Choose images"\n        accept="image/*"\n        formControlName="files"\n        [multiple]="true"\n        [loadingFiles]="loading$ | async"\n        [rejectedFiles]="rejected$ | async"\n        (rejectedFilesChange)="onRejectedFilesChange($event)"\n    ></tui-input-file>\n</form>\n'},this.example3={TypeScript:"import {ChangeDetectorRef, Component, Inject} from '@angular/core';\nimport {TuiDestroyService, watch} from '@taiga-ui/cdk';\nimport {TuiNotificationsService} from '@taiga-ui/core';\nimport {TuiFileLike} from '@taiga-ui/kit';\nimport {combineLatest, Observable, Subject, timer} from 'rxjs';\nimport {mapTo, startWith, switchMap, takeUntil} from 'rxjs/operators';\nimport {changeDetection} from '../../../../../change-detection-strategy';\nimport {encapsulation} from '../../../../../view-encapsulation';\n\nclass RejectedFile {\n    constructor(readonly file: TuiFileLike, readonly reason: string) {}\n}\n\nfunction isRejectedFile(file: any): file is RejectedFile {\n    return file instanceof RejectedFile;\n}\n\nfunction getRemoved<T>(oldArray: ReadonlyArray<T>, newArray: ReadonlyArray<T>): T | null {\n    const filtered = oldArray.filter(item => newArray.indexOf(item) === -1);\n\n    return filtered.length === 1 ? filtered[0] : null;\n}\n\nfunction isNarrowed<T>(oldArray: ReadonlyArray<T>, newArray: ReadonlyArray<T>): boolean {\n    return newArray.every(item => oldArray.indexOf(item) !== -1);\n}\n\nfunction convertRejected({file, reason}: RejectedFile): TuiFileLike {\n    return {\n        name: file.name,\n        size: file.size,\n        type: file.type,\n        content: reason,\n    };\n}\n\n@Component({\n    selector: 'tui-input-file-example-3',\n    templateUrl: './index.html',\n    styleUrls: ['./index.less'],\n    providers: [TuiDestroyService],\n    changeDetection,\n    encapsulation,\n})\nexport class TuiInputFileExample3 {\n    files: ReadonlyArray<TuiFileLike> = [\n        {\n            name: 'Loading file.txt',\n        },\n        {\n            name:\n                'A file with a very very long title to check that it can be cut correctly.txt',\n            src: 'https://tools.ietf.org/html/rfc675',\n        },\n    ];\n    loadingFiles: ReadonlyArray<TuiFileLike> = [this.files[0]];\n    rejectedFiles: ReadonlyArray<TuiFileLike> = [\n        {\n            name: 'File with an error.txt',\n            content: 'Something went wrong this time',\n        },\n    ];\n\n    private readonly files$ = new Subject<ReadonlyArray<TuiFileLike>>();\n\n    constructor(\n        @Inject(TuiDestroyService) destroy$: TuiDestroyService,\n        @Inject(ChangeDetectorRef) changeDetectorRef: ChangeDetectorRef,\n        @Inject(TuiNotificationsService)\n        private readonly notificationsService: TuiNotificationsService,\n    ) {\n        this.files$\n            .pipe(\n                takeUntil(destroy$),\n                switchMap(files =>\n                    combineLatest(\n                        files.map(file => this.serverRequest(file).pipe(startWith(file))),\n                    ),\n                ),\n                watch(changeDetectorRef),\n            )\n            .subscribe(response => {\n                this.processResponse(response);\n            });\n    }\n\n    onModelChange(files: ReadonlyArray<TuiFileLike>) {\n        this.processNotification(files);\n\n        if (isNarrowed(this.files, files)) {\n            this.files = files;\n            this.loadingFiles = this.loadingFiles.filter(\n                file => files.indexOf(file) !== -1,\n            );\n\n            return;\n        }\n\n        this.files = files;\n        this.loadingFiles = this.files;\n        this.files$.next(this.files);\n    }\n\n    private processNotification(files: ReadonlyArray<TuiFileLike>) {\n        const removed = getRemoved(this.files, files);\n\n        if (removed) {\n            this.notificationsService.show(`\"${removed.name}\" was removed`).subscribe();\n        }\n    }\n\n    private processResponse(files: ReadonlyArray<RejectedFile | TuiFileLike | null>) {\n        this.loadingFiles = this.loadingFiles.filter(file => files.indexOf(file) !== -1);\n\n        const newRejectedFiles = files\n            .filter(isRejectedFile)\n            .filter(({file}) => this.files.indexOf(file) !== -1);\n\n        if (newRejectedFiles.length === 0) {\n            return;\n        }\n\n        this.rejectedFiles = [\n            ...this.rejectedFiles,\n            ...newRejectedFiles.map(convertRejected),\n        ];\n        this.files = this.files.filter(file =>\n            newRejectedFiles.every(rejectedFile => rejectedFile.file !== file),\n        );\n    }\n\n    private serverRequest(file: TuiFileLike): Observable<RejectedFile | File | null> {\n        const delay = Math.round(Math.random() * 5000 + 500);\n        const result =\n            delay % 2\n                ? null\n                : new RejectedFile(file, 'Server responded for odd number of time');\n\n        return timer(delay).pipe(mapTo(result));\n    }\n}\n",HTML:'<div class="container">\n    <p i18n class="tui-space_bottom-1">\n        With preset files and actions when deleting\n    </p>\n    <tui-input-file\n        [ngModel]="files"\n        [multiple]="true"\n        [loadingFiles]="loadingFiles"\n        [(rejectedFiles)]="rejectedFiles"\n        (ngModelChange)="onModelChange($event)"\n    ></tui-input-file>\n    <p i18n>Loading files should also be in control</p>\n</div>\n'},this.example4={TypeScript:"import {Component} from '@angular/core';\nimport {changeDetection} from '../../../../../change-detection-strategy';\nimport {encapsulation} from '../../../../../view-encapsulation';\n\n@Component({\n    selector: 'tui-input-file-example-4',\n    templateUrl: './index.html',\n    styleUrls: ['./index.less'],\n    changeDetection,\n    encapsulation,\n})\nexport class TuiInputFileExample4 {\n    files: ReadonlyArray<File> = [];\n}\n",HTML:'<div class="container">\n    <div i18n class="tui-space_bottom-1">\n        Sync working with files, no loading state\n    </div>\n    <tui-input-file\n        size="l"\n        [multiple]="true"\n        [(ngModel)]="files"\n    ></tui-input-file>\n</div>\n'},this.control=new o.FormControl,this.link="Choose a file",this.label="or drop\xa0it\xa0here",this.multiple=!1,this.showSize=!0,this.accept="",this.acceptVariants=["image/*","application/pdf","image/*,application/pdf"],this.maxFileSizeVariants=[100,512e3,3e7,22e5],this.sizeVariants=["m","l"],this.rejectedFilesVariants=[[],[{name:"test.txt",size:123,content:"File is too boring"},{name:"Waterplea \u2014 Strays.mp3",size:237,content:"File already exists"}]],this.size=this.sizeVariants[0],this.rejectedFiles=this.rejectedFilesVariants[0],this.maxFileSize=this.maxFileSizeVariants[2]}}return e.\u0275fac=function(t){return ze(t||e)},e.\u0275cmp=c["\u0275\u0275defineComponent"]({type:e,selectors:[["example-tui-input-file"]],features:[c["\u0275\u0275ProvidersFeature"]([{provide:u.a,useExisting:Object(c.forwardRef)(()=>e)}]),c["\u0275\u0275InheritDefinitionFeature"]],decls:4,vars:0,consts:[["header","InputFile","package","KIT","type","components"],["pageTab",""],["id","single",3,"content",6,"heading"],["id","multiple",3,"content",6,"heading"],["id","model","heading","ngModel",3,"content"],["id","size",3,"content",6,"heading"],[3,"formControl","accept","link","label","maxFileSize","multiple","rejectedFiles","readOnly","size","showSize","focusable","pseudoFocused","pseudoHovered","pseudoPressed"],["documentationPropertyName","","documentationPropertyType","boolean",3,"documentationPropertyValue","documentationPropertyValueChange"],["documentationPropertyName","accept","documentationPropertyMode","input","documentationPropertyType","string",3,"documentationPropertyValues","documentationPropertyValue","documentationPropertyValueChange"],["documentationPropertyName","label","documentationPropertyMode","input","documentationPropertyType","string",3,"documentationPropertyValue","documentationPropertyValueChange"],["documentationPropertyName","link","documentationPropertyMode","input","documentationPropertyType","string",3,"documentationPropertyValue","documentationPropertyValueChange"],["documentationPropertyName","loadingFiles","documentationPropertyMode","input","documentationPropertyType","ReadonlyArray<TuiFileLike>"],["documentationPropertyName","maxFileSize","documentationPropertyMode","input","documentationPropertyType","number",3,"documentationPropertyValues","documentationPropertyValue","documentationPropertyValueChange"],["documentationPropertyName","multiple","documentationPropertyMode","input","documentationPropertyType","boolean",3,"documentationPropertyValue","documentationPropertyValueChange"],["documentationPropertyName","rejectedFiles","documentationPropertyMode","input-output","documentationPropertyType","ReadonlyArray<TuiFileLike>",3,"documentationPropertyValues","documentationPropertyValue","documentationPropertyValueChange"],["documentationPropertyName","showSize","documentationPropertyMode","input","documentationPropertyType","boolean",3,"documentationPropertyValue","documentationPropertyValueChange"],["documentationPropertyName","size","documentationPropertyMode","input","documentationPropertyType","TuiSizeL",3,"documentationPropertyValues","documentationPropertyValue","documentationPropertyValueChange"],[1,"b-demo-steps"],["filename","myComponent.module.ts",3,"code"],["filename","myComponent.template.html",3,"code"]],template:function(e,t){1&e&&(c["\u0275\u0275elementStart"](0,"tui-doc-page",0),c["\u0275\u0275template"](1,le,13,4,"ng-template",1),c["\u0275\u0275template"](2,Re,13,27,"ng-template",1),c["\u0275\u0275template"](3,Oe,10,2,"ng-template",1),c["\u0275\u0275elementEnd"]())},directives:[p.a,m.a,f.a,P,q,Y,J,X.a,S.a,o.NgControlStatus,o.FormControlDirective,ee.a,te.a,ne.a],encapsulation:2,changeDetection:0}),e})();const ze=c["\u0275\u0275getInheritedFactory"](Me);let $e=(()=>{class e{}return e.\u0275mod=c["\u0275\u0275defineNgModule"]({type:e}),e.\u0275inj=c["\u0275\u0275defineInjector"]({factory:function(t){return new(t||e)},imports:[[i.c,o.FormsModule,o.ReactiveFormsModule,s.TuiInputFileModule,s.TuiInputModule,a.TuiLinkModule,l.h,r.f.forChild(Object(l.o)(Me))]]}),e})()},pVuH:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));class i{constructor(){this.pseudoVariants=[!1,!0],this.focusable=!0,this.pseudoFocused=null,this.pseudoHovered=null,this.pseudoPressed=null}}}}]);